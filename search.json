[{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Differential Network Analysis with multiDEGGs","text":"multiDEGGs package performs multi-omic differential network analysis identifying differential interactions molecular entities (genes, proteins, miRNAs, biomolecules) across omic datasets provided. omic dataset, differential network constructed, links represent statistically significant differential interactions entities. networks integrated comprehensive visualization using distinct colors distinguish interactions different omic layers. unified visualization allows interactive exploration cross-omic patterns (e.g., differential interactions present transcript protein level). link, users can access differential statistical significance metrics (p-values adjusted p-values, calculated via robust traditional linear regression interaction term), differential regression plots. Beyond network visualization exploration, multiDEGGs extends utility predictive modeling applications. identified differential interactions can leveraged engineered features machine learning pipelines, providing biologically meaningful predictors capture relational information molecular entities. package includes specialized functions nested cross-validation ensure proper feature selection engineering without data leakage, enabling construction robust interpretable predictive models.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Differential Network Analysis with multiDEGGs","text":"Install CRAN:install.packages(\"multiDEGGs\") Install Github:devtools::install_github(\"elisabettasciacca/multiDEGGs\")","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"quick-start---generate-differential-networks","dir":"Articles","previous_headings":"","what":"Quick start - Generate Differential Networks","title":"Differential Network Analysis with multiDEGGs","text":"Let’s start loading package sample data: Generate Differential Networks:","code":"library(multiDEGGs) data(\"synthetic_metadata\") data(\"synthetic_rnaseqData\") data(\"synthetic_proteomicData\") data(\"synthetic_OlinkData\") assayData_list <- list(\"RNAseq\" = synthetic_rnaseqData,                        \"Proteomics\" = synthetic_proteomicData,                        \"Olink\" = synthetic_OlinkData)  deggs_object <- get_diffNetworks(assayData = assayData_list,                                  metadata = synthetic_metadata,                                  category_variable = \"response\",                                  regression_method = \"lm\",                                  padj_method = \"bonferroni\",                                  verbose = FALSE,                                  show_progressBar = FALSE,                                  cores = 2)"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"key-parameters-of-get_diffnetworks","dir":"Articles","previous_headings":"Quick start - Generate Differential Networks","what":"Key Parameters of get_diffNetworks","title":"Differential Network Analysis with multiDEGGs","text":"’s worth explaining important parameters get_diffNetworks: assayData: accepts either single normalized matrix/data frame (single omic differential analysis), list matrices/data frames (multi-omic scenarios). multi-omic analysis, ’s highly recommended use named list data. unnamed, sequential names (assayData1, assayData2, etc.) assigned identify matrix data frame. metadata: can also named factor vector, names matching patient IDs column names assay data matrices/data frames. case, category_variable can remain unset (NULL default). category_subset: parameter can restrict analysis certain subset categories available metadata/category vector. regression_method: set \"lm\" default faster highly recommended machine learning scenarios, function might repeatedly called many times. basic differential analyses, \"rlm\" can also used may perform better cases. percentile_vector: default, molecular targets (genes, proteins, etc.) whose expression level 35th percentile entire data matrix excluded analysis. threshold can modified specifying percentile vector internally used percolation analysis. example, remove targets 25th percentile, set percentile_vector = seq(0.25, 0.98, = 0.05). padj_method: default method Bonferroni. Storey’s q values often give generous results qvalue package needs installed first. NOTE: patient IDs need present across datasets. Different numbers samples per omic acceptable. IDs whose data available colnames assayData included analysis. Missing IDs listed message similar : following samples IDs missing Proteomics: PT001, PT005, PT0030","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Differential Network Analysis with multiDEGGs","text":"deggs_object now contains differential networks omic data assayData_list. networks can integrated comprehensive visualization different colors distinguish links different omic layers. visualization interface allows : Navigate networks associated patient category Filter link significance Search specific genes inside network     Thicker links correspond higher significant p-values. direction arrows shows relationship direction reported literature, derived data. user can visualize differential regression plots clicking link:     Single node differential expressions can also visualized clicking nodes:     NOTE: multi-omic scenarios, data first matrix list passed assayData used boxplot.","code":"View_diffNetworks(deggs_object)"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"list-all-differential-interactions","dir":"Articles","previous_headings":"","what":"List All Differential Interactions","title":"Differential Network Analysis with multiDEGGs","text":"Outside interactive environment, get_multiOmics_diffNetworks() function can used get table differential interactions, ordered p-value adjusted p-value: single omic scenarios, use get_sig_deggs() function:","code":"get_multiOmics_diffNetworks(deggs_object, sig_threshold = 0.05) #> $Non_responder #>                  from       to      p.value        p.adj      layer #> TNF-TNFRSF1A      TNF TNFRSF1A 3.325023e-04 1.330009e-03     RNAseq #> IL1B-IL1R2       IL1B    IL1R2 5.389195e-04 2.155678e-03     RNAseq #> TGFB3-TGFBR1    TGFB3   TGFBR1 5.329071e-15 2.131628e-14     RNAseq #> AKT2-MTOR        AKT2     MTOR 4.347083e-04 1.738833e-03     RNAseq #> FANCD2-FAN1    FANCD2     FAN1 4.440892e-16 3.552714e-15 Proteomics #> GNG12-RASA2     GNG12    RASA2 0.000000e+00 0.000000e+00 Proteomics #> RASGRP3-RRAS  RASGRP3     RRAS 2.202344e-04 1.761875e-03 Proteomics #> TNF-TNFRSF1A1     TNF TNFRSF1A 0.000000e+00 0.000000e+00 Proteomics #> RASGRP1-RAP1A RASGRP1    RAP1A 2.840564e-03 2.272452e-02 Proteomics #>  #> $Responder #>                from    to      p.value        p.adj  layer #> FANCD2-FAN1  FANCD2  FAN1 0.000000e+00 0.000000e+00 RNAseq #> FASLG-FAS     FASLG   FAS 6.947839e-07 2.084352e-06 RNAseq #> MAP2K2-MAPK3 MAP2K2 MAPK3 1.153300e-12 3.459899e-12 RNAseq deggs_object_oneOmic <- get_diffNetworks(assayData = synthetic_rnaseqData,                                  metadata = synthetic_metadata,                                  category_variable = \"response\",                                  regression_method = \"lm\",                                  padj_method = \"bonferroni\",                                  verbose = FALSE,                                  show_progressBar = FALSE,                                  cores = 2)  get_sig_deggs(deggs_object_oneOmic, sig_threshold = 0.05) #>                              from       to      p.value        p.adj #> Non_responder.TNF-TNFRSF1A    TNF TNFRSF1A 3.325023e-04 1.330009e-03 #> Non_responder.IL1B-IL1R2     IL1B    IL1R2 5.389195e-04 2.155678e-03 #> Non_responder.TGFB3-TGFBR1  TGFB3   TGFBR1 5.329071e-15 2.131628e-14 #> Non_responder.AKT2-MTOR      AKT2     MTOR 4.347083e-04 1.738833e-03 #> Responder.FANCD2-FAN1      FANCD2     FAN1 0.000000e+00 0.000000e+00 #> Responder.FASLG-FAS         FASLG      FAS 6.947839e-07 2.084352e-06 #> Responder.MAP2K2-MAPK3     MAP2K2    MAPK3 1.153300e-12 3.459899e-12"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"differential-regression-plots","dir":"Articles","previous_headings":"","what":"Differential Regression Plots","title":"Differential Network Analysis with multiDEGGs","text":"plot differential regression fits outside interactive environment, use plot_regressions() specifying omic data used two targets:  single omic analyses, assayDataName parameter can remain unset.","code":"plot_regressions(deggs_object,                  assayDataName = \"RNAseq\",                  gene_A = \"MTOR\",                   gene_B = \"AKT2\",                  legend_position = \"bottomright\")"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"differential-network-analysis-with-more-than-two-groups","dir":"Articles","previous_headings":"","what":"Differential Network Analysis with More Than Two Groups","title":"Differential Network Analysis with multiDEGGs","text":"’s possible compare differential interactions among two categorical groups. steps described stay ; dropdown menu interactive environment show available categories:  regressions boxplots show categories: statistical significance interaction term calculated via one-way ANOVA case. highly recommend least 4 5 observations per group.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"feature-selection-and-engineering-with-multideggs-in-nested-cross-validation","dir":"Articles","previous_headings":"","what":"Feature Selection and Engineering with multiDEGGs in Nested Cross-Validation","title":"Differential Network Analysis with multiDEGGs","text":"computational biology applications involving high-throughput data, researchers commonly encounter situations number potential predictors far exceeds available sample size. dimensional challenge requires careful feature selection strategies mathematical clinical reasons. Standard feature selection methods typically evaluate predictors individually, identifying variables show strongest univariate associations outcome variable (t-tests Wilcoxon tests). effective, approach overlooks interconnected nature biological systems, Feature engineering represents complementary strategy creates new predictors combining transforming existing variables. biology, approach can used capture higher-order information reflects interconnected nature molecular processes. instance, ratio two genes may provide discriminative power either gene expression level independently, particularly relative balance disrupted disease states. informative content encoded differential interactions, combined multiDEGGs’ ability identify literature-validated differential relationships, makes particularly well-suited individual feature selection guided creation engineered predictors machine learning. approach potential overcome limitations conventional algorithms may select individual predictors without clear biological significance, compromising interpretability clinical credibility resulting models.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"why-nested-cross-validation-for-feature-engineering","dir":"Articles","previous_headings":"Feature Selection and Engineering with multiDEGGs in Nested Cross-Validation","what":"Why Nested Cross-Validation for Feature Engineering?","title":"Differential Network Analysis with multiDEGGs","text":"crucial feature selection modification conducted exclusively training data within cross-validation loops prevent information leakage test set. nestedcv package enables nested modification predictors within outer fold, ensuring attributes learned training part applied test data without prior knowledge test data . selected combined features, corresponding model, can evaluated hold-test data without introducing bias. (nestcv.glmnet) (nestcv.train) nestedcv accept user-defined function filters transforms feature matrix passing function name modifyX parameter.multiDEGGs package provides two specialized functions purpose.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"multideggs_filter-pure-differential-network-based-selection","dir":"Articles","previous_headings":"Feature Selection and Engineering with multiDEGGs in Nested Cross-Validation","what":"multiDEGGs_filter(): Pure Differential Network-Based Selection","title":"Differential Network Analysis with multiDEGGs","text":"multiDEGGs_filter() function performs feature selection based entirely differential network analysis. identifies significant differential molecular interactions can return either interaction pairs alone pairs individual variables involved interactions.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"key-parameters","dir":"Articles","previous_headings":"Feature Selection and Engineering with multiDEGGs in Nested Cross-Validation > multiDEGGs_filter(): Pure Differential Network-Based Selection","what":"Key Parameters","title":"Differential Network Analysis with multiDEGGs","text":"using multiDEGGs_filter(), can control following parameters modifyX_options: keep_single_genes (logical, default FALSE): Controls whether include individual genes significant pairs addition pairs nfilter (integer, default NULL): Maximum number predictors return. NULL, significant interactions found included","code":""},{"path":[]},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"basic-usage-pairs-only","dir":"Articles","previous_headings":"Feature Selection and Engineering with multiDEGGs in Nested Cross-Validation > multiDEGGs_filter(): Pure Differential Network-Based Selection > Usage Examples","what":"Basic Usage: Pairs Only","title":"Differential Network Analysis with multiDEGGs","text":"","code":"library(nestedcv) data(\"synthetic_metadata\") data(\"synthetic_rnaseqData\")  # Regularized linear model with interaction pairs only fit.glmnet <- nestcv.glmnet(   y = as.numeric(synthetic_metadata$response),   x = t(synthetic_rnaseqData),   modifyX = \"multiDEGGs_filter\",   modifyX_options = list(     keep_single_genes = FALSE,     nfilter = 20   ),   modifyX_useY = TRUE,   n_outer_folds = 5,   n_inner_folds = 6,   verbose = FALSE )  summary(fit.glmnet) #> Nested cross-validation with glmnet #> No filter #> Modifier:  multiDEGGs_filter  #> Outer loop:  5-fold CV #> Inner loop:  6-fold CV #> 100 observations, 14 predictors #>  #>        alpha  lambda n.filter #> Fold 1   0.2 0.16011        7 #> Fold 2   0.1 0.07423        7 #> Fold 3   0.1 0.14076        7 #> Fold 4   0.1 0.13511        7 #> Fold 5   1.0 0.15091        7 #>  #> Final parameters: #>  lambda    alpha   #> 0.07099  0.10000   #>  #> Final coefficients: #>  (Intercept) TNF:TNFRSF1A    AKT2:MTOR   IL1B:IL1R2    FASLG:FAS TGFB3:TGFBR1  #>     1.808953    -0.188626    -0.113628     0.050012    -0.034766    -0.030783  #> MAP2K2:MAPK3  FANCD2:FAN1  #>    -0.020656    -0.008568  #>  #> Result: #>        RMSE     R.squared   Pearson.r^2           MAE    #>     0.48505       0.03419       0.04929       0.46076"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"including-individual-genes-keep_single_genes-true","dir":"Articles","previous_headings":"Feature Selection and Engineering with multiDEGGs in Nested Cross-Validation > multiDEGGs_filter(): Pure Differential Network-Based Selection > Usage Examples","what":"Including Individual Genes (keep_single_genes = TRUE)","title":"Differential Network Analysis with multiDEGGs","text":"","code":"# Random forest model including both pairs and individual genes fit.rf <- nestcv.train(   y = synthetic_metadata$response,   x = t(synthetic_rnaseqData),   method = \"rf\",   modifyX = \"multiDEGGs_filter\",   modifyX_options = list(     keep_single_genes = TRUE,     nfilter = 30   ),   modifyX_useY = TRUE,   n_outer_folds = 5,   n_inner_folds = 6,   verbose = FALSE ) #> Loading required package: ggplot2 #> Loading required package: lattice  fit.rf$summary #>                Reference #> Predicted       Non_responder Responder #>   Non_responder            57         1 #>   Responder                 1        41 #>  #>               AUC            Accuracy   Balanced accuracy    #>            0.9988              0.9800              0.9795  # Plot ROC on outer folds plot(fit.rf$roc)"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"how-nfilter-works-with-keep_single_genes","dir":"Articles","previous_headings":"Feature Selection and Engineering with multiDEGGs in Nested Cross-Validation > multiDEGGs_filter(): Pure Differential Network-Based Selection","what":"How nfilter works with keep_single_genes","title":"Differential Network Analysis with multiDEGGs","text":"keep_single_genes = FALSE: nfilter limits number interaction pairs returned keep_single_genes = TRUE: nfilter limits combined count unique individual genes plus interaction pairs. function prioritizes pairs significance adds individual genes needed limit reached","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"multideggs_combined_filter-hybrid-statistical-and-network-based-selection","dir":"Articles","previous_headings":"Feature Selection and Engineering with multiDEGGs in Nested Cross-Validation","what":"multiDEGGs_combined_filter(): Hybrid Statistical and Network-Based Selection","title":"Differential Network Analysis with multiDEGGs","text":"multiDEGGs_combined_filter() function combines traditional statistical feature selection differential network analysis. hybrid approach allows benefit conventional univariate selection methods biological insights interaction analysis.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"key-parameters-1","dir":"Articles","previous_headings":"Feature Selection and Engineering with multiDEGGs in Nested Cross-Validation > multiDEGGs_combined_filter(): Hybrid Statistical and Network-Based Selection","what":"Key Parameters","title":"Differential Network Analysis with multiDEGGs","text":"filter_method (character): Statistical method single feature selection. Options: \"ttest\", \"wilcoxon\", \"ranger\", \"glmnet\", \"pls\" nfilter (integer): Maximum number features select dynamic_nfilter (logical): Controls nfilter applied (see detailed explanation ) keep_single_genes (logical): dynamic_nfilter = TRUE, determines whether include individual genes multiDEGGs pairs","code":""},{"path":[]},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"dynamic-selection-dynamic_nfilter-true","dir":"Articles","previous_headings":"Feature Selection and Engineering with multiDEGGs in Nested Cross-Validation > multiDEGGs_combined_filter(): Hybrid Statistical and Network-Based Selection > Dynamic vs. Balanced Selection Modes","what":"Dynamic Selection (dynamic_nfilter = TRUE)","title":"Differential Network Analysis with multiDEGGs","text":"dynamic mode, function: 1. Selects nfilter single genes using chosen statistical method 2. Adds significant interaction pairs found multiDEGGs 3. Total predictors = nfilter single genes + number significant pairs mode allows feature space expand based biological complexity discovered fold.","code":"# Dynamic selection with t-test for single genes fit.dynamic <- nestcv.glmnet(   y = as.numeric(synthetic_metadata$response),   x = t(synthetic_rnaseqData),   modifyX = \"multiDEGGs_combined_filter\",   modifyX_options = list(     filter_method = \"ttest\",      nfilter = 20,     dynamic_nfilter = TRUE,      keep_single_genes = FALSE   ),   modifyX_useY = TRUE,   n_outer_folds = 5,   n_inner_folds = 6,   verbose = FALSE )"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"balanced-selection-dynamic_nfilter-false","dir":"Articles","previous_headings":"Feature Selection and Engineering with multiDEGGs in Nested Cross-Validation > multiDEGGs_combined_filter(): Hybrid Statistical and Network-Based Selection > Dynamic vs. Balanced Selection Modes","what":"Balanced Selection (dynamic_nfilter = FALSE)","title":"Differential Network Analysis with multiDEGGs","text":"balanced mode, function: 1. Allocates approximately half nfilter interaction pairs 2. Fills remaining slots single genes statistical filter 3. Maintains consistent total number predictors across folds mode ensures fixed feature space size balancing single genes interactions.","code":"# Balanced selection with Wilcoxon-test importance fit.balanced <- nestcv.train(   y = synthetic_metadata$response,   x = t(synthetic_rnaseqData),   method = \"rf\",   modifyX = \"multiDEGGs_combined_filter\",   modifyX_options = list(     filter_method = \"wilcoxon\",      nfilter = 40,     dynamic_nfilter = FALSE   ),   modifyX_useY = TRUE,   n_outer_folds = 5,   n_inner_folds = 6,   verbose = FALSE )"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"available-statistical-methods","dir":"Articles","previous_headings":"Feature Selection and Engineering with multiDEGGs in Nested Cross-Validation > multiDEGGs_combined_filter(): Hybrid Statistical and Network-Based Selection","what":"Available Statistical Methods","title":"Differential Network Analysis with multiDEGGs","text":"\"ttest\": Two-sample t-test differential expression \"wilcoxon\": Wilcoxon rank-sum test (non-parametric alternative t-test) \"ranger\": Random Forest variable importance scoring (ranger package must installed first) \"glmnet\": Elastic net regularization coefficients \"pls\": Partial Least Squares variable importance","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"practical-considerations","dir":"Articles","previous_headings":"Feature Selection and Engineering with multiDEGGs in Nested Cross-Validation","what":"Practical considerations","title":"Differential Network Analysis with multiDEGGs","text":"implementing multiDEGGs machine learning pipeline, ’s highly recommended first run preliminary analysis complete dataset assess number differential interactions detected. exploratory step can guide choice approach parameter settings. multiDEGGs identifies small number differential interactions (e.g., fewer 10-20 pairs), features alone may lack sufficient predictive power. cases, consider: Using multiDEGGs_combined_filter() integrate network-based features traditional statistical selection methods Setting keep_single_genes = TRUE multiDEGGs_filter() include individual genes involved differential pairs Adjusting percentile_vector significance thresholds initial multiDEGGs analysis potentially capture interactions Conversely, large number differential interactions detected, multiDEGGs_filter() alone may provide sufficient feature diversity effective model training.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"feature-engineering-details","dir":"Articles","previous_headings":"Feature Selection and Engineering with multiDEGGs in Nested Cross-Validation","what":"Feature Engineering Details","title":"Differential Network Analysis with multiDEGGs","text":"functions create ratio-based features significant gene pairs (Gene / Gene B), capture relative expression relationships drive differential network connectivity. predict methods automatically handle feature transformation training test data within cross-validation fold, ensuring information leakage. Note: significant differential interactions found particular fold, functions automatically fall back t-test-based selection ensure robust performance across scenarios. fallback indicated printed “0” execution.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Differential Network Analysis with multiDEGGs","text":"","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] caret_7.0-1      lattice_0.22-7   ggplot2_3.5.2    nestedcv_0.8.0   #> [5] multiDEGGs_1.0.0 #>  #> loaded via a namespace (and not attached): #>  [1] tidyselect_1.2.1     timeDate_4041.110    dplyr_1.1.4          #>  [4] farver_2.1.2         matrixTests_0.2.3    fastmap_1.2.0        #>  [7] pROC_1.18.5          digest_0.6.37        rpart_4.1.24         #> [10] timechange_0.3.0     lifecycle_1.0.4      survival_3.8-3       #> [13] magrittr_2.0.3       compiler_4.5.1       rlang_1.1.6          #> [16] sass_0.4.10          tools_4.5.1          yaml_2.3.10          #> [19] data.table_1.17.8    knitr_1.50           htmlwidgets_1.6.4    #> [22] plyr_1.8.9           RColorBrewer_1.1-3   withr_3.0.2          #> [25] purrr_1.1.0          desc_1.4.3           nnet_7.3-20          #> [28] grid_4.5.1           stats4_4.5.1         e1071_1.7-16         #> [31] future_1.58.0        globals_0.18.0       scales_1.4.0         #> [34] iterators_1.0.14     MASS_7.3-65          cli_3.6.5            #> [37] rmarkdown_2.29       ragg_1.4.0           generics_0.1.4       #> [40] RcppParallel_5.1.10  future.apply_1.20.0  reshape2_1.4.4       #> [43] proxy_0.4-27         qvalue_2.40.0        cachem_1.1.0         #> [46] stringr_1.5.1        splines_4.5.1        parallel_4.5.1       #> [49] matrixStats_1.5.0    vctrs_0.6.5          hardhat_1.4.1        #> [52] glmnet_4.1-10        Matrix_1.7-3         jsonlite_2.0.0       #> [55] listenv_0.9.1        systemfonts_1.2.3    foreach_1.5.2        #> [58] gower_1.0.2          jquerylib_0.1.4      recipes_1.3.1        #> [61] glue_1.8.0           parallelly_1.45.1    pkgdown_2.1.3        #> [64] codetools_0.2-20     shape_1.4.6.1        lubridate_1.9.4      #> [67] stringi_1.8.7        gtable_0.3.6         sfsmisc_1.1-20       #> [70] tibble_3.3.0         pillar_1.11.0        htmltools_0.5.8.1    #> [73] randomForest_4.7-1.2 ipred_0.9-15         lava_1.8.1           #> [76] R6_2.6.1             zigg_0.0.2           textshaping_1.0.1    #> [79] doParallel_1.0.17    evaluate_1.0.4       Rfast_2.1.5.1        #> [82] bslib_0.9.0          class_7.3-23         Rcpp_1.1.0           #> [85] nlme_3.1-168         prodlim_2025.04.28   xfun_0.52            #> [88] fs_1.6.6             pkgconfig_2.0.3      ModelMetrics_1.2.2.2"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/articles/multiDEGGs_vignette.html","id":"citation","dir":"Articles","previous_headings":"","what":"Citation","title":"Differential Network Analysis with multiDEGGs","text":"","code":"citation(\"multiDEGGs\") #> To cite package 'multiDEGGs' in publications use: #>  #>   Sciacca E, et al. (2023). \"DEGGs: An R package with shiny app for the #>   identification of differentially expressed gene-gene interactions in #>   high-Throughput sequencing data.\" _Bioinformatics_, *39*, btad192. #>   doi:10.1093/bioinformatics/btad192 #>   <https://doi.org/10.1093/bioinformatics/btad192>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Article{, #>     title = {DEGGs: An R package with shiny app for the identification of differentially expressed gene-gene interactions in high-Throughput sequencing data}, #>     author = {Elisabetta Sciacca and {et al.}}, #>     journal = {Bioinformatics}, #>     year = {2023}, #>     volume = {39}, #>     pages = {btad192}, #>     doi = {10.1093/bioinformatics/btad192}, #>   }"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Elisabetta Sciacca. Author, maintainer, copyright holder. Myles Lewis. Contributor.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sciacca E, et al. (2023). “DEGGs: R package shiny app identification differentially expressed gene-gene interactions high-Throughput sequencing data.” Bioinformatics, 39, btad192. doi:10.1093/bioinformatics/btad192.","code":"@Article{,   title = {DEGGs: An R package with shiny app for the identification of differentially expressed gene-gene interactions in high-Throughput sequencing data},   author = {Elisabetta Sciacca and {et al.}},   journal = {Bioinformatics},   year = {2023},   volume = {39},   pages = {btad192},   doi = {10.1093/bioinformatics/btad192}, }"},{"path":[]},{"path":"https://elisabettasciacca.github.io/multiDEGGs/index.html","id":"differentially-expressed-gene-gene-pairs-in-multi-omic-data","dir":"","previous_headings":"","what":"Differentially Expressed Gene-Gene pairs in multi omic data","title":"Multi-Omic Differentially Expressed Gene-Gene Pairs","text":"multiDEGGs package test differential gene-gene correlations across different groups samples multi omic data. Specific gene-gene interactions can explored gene-gene pair regression plots can interactively shown.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/index.html","id":"installation","dir":"","previous_headings":"Differentially Expressed Gene-Gene pairs in multi omic data","what":"Installation","title":"Multi-Omic Differentially Expressed Gene-Gene Pairs","text":"Install CRAN:install.packages(\"multiDEGGs\") Install Github:devtools::install_github(\"elisabettasciacca/multiDEGGs\")","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/index.html","id":"example","dir":"","previous_headings":"Differentially Expressed Gene-Gene pairs in multi omic data","what":"Example","title":"Multi-Omic Differentially Expressed Gene-Gene Pairs","text":"Load package sample datalibrary(multiDEGGs) data(\"synthetic_metadata\") data(\"synthetic_rnaseqData\") data(\"synthetic_proteomicData\") data(\"synthetic_OlinkData\") Generate differential networks `assayData_list <- list(“RNAseq” = synthetic_rnaseqData, “Proteomics” = synthetic_proteomicData, “Olink” = synthetic_OlinkData) deggs_object <- get_diffNetworks(assayData = assayData_list, metadata = synthetic_metadata, category_variable = “response”, regression_method = “lm”, padj_method = “bonferroni”, verbose = FALSE, show_progressBar = FALSE, cores = 2)` Visualise interactively (open shiny interface)View_diffNetworks(deggs_object) Get table listing significant interactions found categoryget_multiOmics_diffNetworks(deggs_object, sig_threshold = 0.05) Plot differential regression fits single interactionplot_regressions(deggs_object,                  assayDataName = \"RNAseq\",                  gene_A = \"MTOR\",                   gene_B = \"AKT2\",                  legend_position = \"bottomright\")","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Multi-Omic Differentially Expressed Gene-Gene Pairs","text":"{r} citation(\"multiDEGGs\")","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/View_diffNetworks.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive visualisation of differential networks — View_diffNetworks","title":"Interactive visualisation of differential networks — View_diffNetworks","text":"Explore differential networks interactively select regression box plots","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/View_diffNetworks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive visualisation of differential networks — View_diffNetworks","text":"","code":"View_diffNetworks(deggs_object, legend.arrow.width = 0.35, stepY_legend = 55)"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/View_diffNetworks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive visualisation of differential networks — View_diffNetworks","text":"deggs_object object class deggs generated get_diffNetworks legend.arrow.width width arrow used network legend. Default 0.35. number assayData matrices increases parameter must accordingly increased avoid graphical errors legend. stepY_legend vertical space legend arrows. used together legend.arrow.width adjust legend space case graphical errors. Default 55.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/View_diffNetworks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive visualisation of differential networks — View_diffNetworks","text":"shiny interface showing networks selectable nodes links","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/View_diffNetworks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive visualisation of differential networks — View_diffNetworks","text":"","code":"data(\"synthetic_metadata\") data(\"synthetic_rnaseqData\") data(\"synthetic_proteomicData\") data(\"synthetic_OlinkData\") assayData_list <- list(\"RNAseq\" = synthetic_rnaseqData,                        \"Proteomics\" = synthetic_proteomicData,                        \"Olink\" = synthetic_OlinkData) deggs_object <- get_diffNetworks(assayData = assayData_list,                                  metadata = synthetic_metadata,                                  category_variable = \"response\",                                  regression_method = \"lm\",                                  verbose = FALSE,                                  show_progressBar = FALSE,                                  cores = 1) # the below function runs a shiny app, so can't be run during R CMD check                                   if(interactive()){ View_diffNetworks(deggs_object)   }"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/calc_pvalues_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the p values for specific category network samples — calc_pvalues_network","title":"Calculate the p values for specific category network samples — calc_pvalues_network","text":"Calculate p values specific category network samples","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/calc_pvalues_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the p values for specific category network samples — calc_pvalues_network","text":"","code":"calc_pvalues_network(   assayData,   metadata,   padj_method,   categories_length,   regression_method = \"lm\",   category_network )"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/calc_pvalues_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the p values for specific category network samples — calc_pvalues_network","text":"assayData matrix data.frame (list matrices data.frames multi-omic analysis) containing normalised assay data. Sample IDs must columns probe IDs (genes, proteins...) rows. multi omic analysis, highly recommended use named list data. unnamed, sequential names (assayData1, assayData2, etc.) assigned identify matrix data.frame. metadata named vector, matrix, data.frame containing sample annotations categories. matrix data.frame, row correspond sample, columns representing different sample characteristics (e.g., treatment group, condition, time point). colname sample characteristic used differential analysis must specified category_variable. Rownames must match sample IDs used assayData. named vector, element must correspond sample characteristic used differential analysis, names must match sample IDs used colnames assayData. Continuous variables allowed. padj_method character string indicating p values correction method multiple test adjustment. can either one methods provided p.adjust function stats (bonferroni, BH, hochberg, etc.) \"q.value\" Storey's q values, \"none\" unadjusted p values. using \"q.value\" qvalue package must installed first. categories_length integer number indicating number categories regression_method whether use robust linear modelling calculate link p values. Options 'lm' (default) 'rlm'. lm implementation faster lighter. category_network network table specific category","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/calc_pvalues_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the p values for specific category network samples — calc_pvalues_network","text":"list p values","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/calc_pvalues_percentile.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute interaction p values for a single percentile value — calc_pvalues_percentile","title":"Compute interaction p values for a single percentile value — calc_pvalues_percentile","text":"Compute interaction p values single percentile value","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/calc_pvalues_percentile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute interaction p values for a single percentile value — calc_pvalues_percentile","text":"","code":"calc_pvalues_percentile(   assayData,   metadata,   categories_length,   category_median_list,   padj_method,   percentile,   contrasts,   regression_method,   edges,   sig_edges_count )"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/calc_pvalues_percentile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute interaction p values for a single percentile value — calc_pvalues_percentile","text":"assayData matrix data.frame (list matrices data.frames multi-omic analysis) containing normalised assay data. Sample IDs must columns probe IDs (genes, proteins...) rows. multi omic analysis, highly recommended use named list data. unnamed, sequential names (assayData1, assayData2, etc.) assigned identify matrix data.frame. metadata named vector, matrix, data.frame containing sample annotations categories. matrix data.frame, row correspond sample, columns representing different sample characteristics (e.g., treatment group, condition, time point). colname sample characteristic used differential analysis must specified category_variable. Rownames must match sample IDs used assayData. named vector, element must correspond sample characteristic used differential analysis, names must match sample IDs used colnames assayData. Continuous variables allowed. categories_length integer number indicating number categories category_median_list list category data.frames padj_method character string indicating p values correction method multiple test adjustment. can either one methods provided p.adjust function stats (bonferroni, BH, hochberg, etc.) \"q.value\" Storey's q values, \"none\" unadjusted p values. using \"q.value\" qvalue package must installed first. percentile float number indicating percentile use. contrasts data.frame containing categories contrasts rows regression_method whether use robust linear modelling calculate link p values. Options 'lm' (default) 'rlm'. lm implementation faster lighter. edges network biological interactions form table class data.frame two columns: \"\" \"\". sig_edges_count number significant edges (p < 0.05)","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/calc_pvalues_percentile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute interaction p values for a single percentile value — calc_pvalues_percentile","text":"list float numbers significant pvalues single percentile","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/cat_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"cat_parallel (from nestedcv) — cat_parallel","title":"cat_parallel (from nestedcv) — cat_parallel","text":"Prints using shell echo inside mclapply run Rstudio","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/cat_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cat_parallel (from nestedcv) — cat_parallel","text":"","code":"cat_parallel(...)"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/cat_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cat_parallel (from nestedcv) — cat_parallel","text":"... passed system()","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/get_diffNetworks.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate multi-omic differential networks — get_diffNetworks","title":"Generate multi-omic differential networks — get_diffNetworks","text":"Generate multi-layer differential network interaction p values","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/get_diffNetworks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate multi-omic differential networks — get_diffNetworks","text":"","code":"get_diffNetworks(   assayData,   metadata,   category_variable = NULL,   regression_method = \"lm\",   category_subset = NULL,   network = NULL,   percentile_vector = seq(0.35, 0.98, by = 0.05),   padj_method = \"bonferroni\",   show_progressBar = TRUE,   verbose = TRUE,   cores = parallel::detectCores()/2 )"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/get_diffNetworks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate multi-omic differential networks — get_diffNetworks","text":"assayData matrix data.frame (list matrices data.frames multi-omic analysis) containing normalised assay data. Sample IDs must columns probe IDs (genes, proteins...) rows. multi omic analysis, highly recommended use named list data. unnamed, sequential names (assayData1, assayData2, etc.) assigned identify matrix data.frame. metadata named vector, matrix, data.frame containing sample annotations categories. matrix data.frame, row correspond sample, columns representing different sample characteristics (e.g., treatment group, condition, time point). colname sample characteristic used differential analysis must specified category_variable. Rownames must match sample IDs used assayData. named vector, element must correspond sample characteristic used differential analysis, names must match sample IDs used colnames assayData. Continuous variables allowed. category_variable metadata matrix data.frame column name metadata contains sample annotations used differential analysis regression_method whether use robust linear modelling calculate link p values. Options 'lm' (default) 'rlm'. lm implementation faster lighter. category_subset optional character vector indicating subset categories category variable. specified, categories category_variable used. network network biological interactions provided user. network must provided form table class data.frame two columns named \"\" \"\". NULL (default) network 10,537 molecular interactions obtained KEGG, mirTARbase, miRecords transmiR used. obtained via exportgraph function MITHrIL tool (Alaimo et al., 2016). percentile_vector numeric vector specifying percentiles used percolation analysis. default, defined seq(0.35, 0.98, = 0.05), generates sequence percentiles starting 0.35, meaning targets (genes/proteins...) whose expression value 35th percentile whole matrix excluded. threshold can modified specifying different starting point seq. granular percolation analysis higher optimisation algorithm, = 0.05 can modified favour lower values, increase computational time. padj_method character string indicating p values correction method multiple test adjustment. can either one methods provided p.adjust function stats (bonferroni, BH, hochberg, etc.) \"q.value\" Storey's q values, \"none\" unadjusted p values. using \"q.value\" qvalue package must installed first. show_progressBar logical. Whether display progress bar execution. Default TRUE. verbose logical. Whether print detailed output messages processing. Default TRUE cores number cores use parallelisation.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/get_diffNetworks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate multi-omic differential networks — get_diffNetworks","text":"deggs object containing differential networks incorporating p values adjusted p values link.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/get_diffNetworks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate multi-omic differential networks — get_diffNetworks","text":"","code":"# Single omic analysis: data(\"synthetic_metadata\") data(\"synthetic_rnaseqData\") deggs_object <- get_diffNetworks(assayData = synthetic_rnaseqData,                                  metadata = synthetic_metadata,                                  category_variable = \"response\",                                  regression_method = \"lm\",                                  padj_method = \"bonferroni\",                                  verbose = FALSE,                                  show_progressBar = FALSE,                                  cores = 1)   # multi-omic analysis:  data(\"synthetic_metadata\") data(\"synthetic_rnaseqData\") data(\"synthetic_proteomicData\") data(\"synthetic_OlinkData\") assayData_list <- list(\"RNAseq\" = synthetic_rnaseqData,                        \"Proteomics\" = synthetic_proteomicData,                        \"Olink\" = synthetic_OlinkData) deggs_object <- get_diffNetworks(assayData = assayData_list,                                  metadata = synthetic_metadata,                                  category_variable = \"response\",                                  regression_method = \"lm\",                                  padj_method = \"bonferroni\",                                  verbose = FALSE,                                  show_progressBar = FALSE,                                  cores = 1)                                   # to use only certain categories for comparison:  # let's randomly add another level of response to the example metadata synthetic_metadata$response <- as.character(synthetic_metadata$response) indices <- sample(1:nrow(synthetic_metadata), 20, replace = FALSE)  synthetic_metadata$response[indices] <- \"Moderate response\" deggs_object <- get_diffNetworks(assayData = assayData_list,                                  metadata = synthetic_metadata,                                  category_variable = \"response\",                                  category_subset = c(\"Responder\",                                                       \"Non_responder\"),                                  regression_method = \"lm\",                                  verbose = FALSE,                                  show_progressBar = FALSE,                                  cores = 1)                                   # to be more generous on the targets to be excluded, and lower the expression  # level threshold to the 25th percentile (or lower):  deggs_object <- get_diffNetworks(assayData = assayData_list,                                  metadata = synthetic_metadata,                                  category_variable = \"response\",                                  category_subset = c(\"Responder\",                                                       \"Non_responder\"),                                  regression_method = \"lm\",                                  percentile_vector = seq(0.25, 0.98, by = 0.05),                                  verbose = FALSE,                                  show_progressBar = FALSE,                                  cores = 1)"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/get_diffNetworks_singleOmic.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate differential networks for single omic analysis — get_diffNetworks_singleOmic","title":"Generate differential networks for single omic analysis — get_diffNetworks_singleOmic","text":"Generate differential networks single omic analysis","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/get_diffNetworks_singleOmic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate differential networks for single omic analysis — get_diffNetworks_singleOmic","text":"","code":"get_diffNetworks_singleOmic(   assayData,   assayDataName,   metadata,   regression_method,   network,   percentile_vector,   padj_method,   show_progressBar,   verbose,   cores )"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/get_diffNetworks_singleOmic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate differential networks for single omic analysis — get_diffNetworks_singleOmic","text":"assayData matrix data.frame (list matrices data.frames multi-omic analysis) containing normalised assay data. Sample IDs must columns probe IDs (genes, proteins...) rows. multi omic analysis, highly recommended use named list data. unnamed, sequential names (assayData1, assayData2, etc.) assigned identify matrix data.frame. assayDataName name assayData, identify omic . metadata named vector, matrix, data.frame containing sample annotations categories. matrix data.frame, row correspond sample, columns representing different sample characteristics (e.g., treatment group, condition, time point). colname sample characteristic used differential analysis must specified category_variable. Rownames must match sample IDs used assayData. named vector, element must correspond sample characteristic used differential analysis, names must match sample IDs used colnames assayData. Continuous variables allowed. regression_method whether use robust linear modelling calculate link p values. Options 'lm' (default) 'rlm'. lm implementation faster lighter. network network biological interactions provided user. network must provided form table class data.frame two columns named \"\" \"\". NULL (default) network 10,537 molecular interactions obtained KEGG, mirTARbase, miRecords transmiR used. obtained via exportgraph function MITHrIL tool (Alaimo et al., 2016). percentile_vector numeric vector specifying percentiles used percolation analysis. default, defined seq(0.35, 0.98, = 0.05), generates sequence percentiles starting 0.35, meaning targets (genes/proteins...) whose expression value 35th percentile whole matrix excluded. threshold can modified specifying different starting point seq. granular percolation analysis higher optimisation algorithm, = 0.05 can modified favour lower values, increase computational time. padj_method character string indicating p values correction method multiple test adjustment. can either one methods provided p.adjust function stats (bonferroni, BH, hochberg, etc.) \"q.value\" Storey's q values, \"none\" unadjusted p values. using \"q.value\" qvalue package must installed first. show_progressBar logical. Whether display progress bar execution. Default TRUE. verbose logical. Whether print detailed output messages processing. Default TRUE cores number cores use parallelisation.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/get_diffNetworks_singleOmic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate differential networks for single omic analysis — get_diffNetworks_singleOmic","text":"list differential networks, one per category","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/get_multiOmics_diffNetworks.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a table of all significant interactions across categories — get_multiOmics_diffNetworks","title":"Get a table of all significant interactions across categories — get_multiOmics_diffNetworks","text":"Get table significant interactions across categories","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/get_multiOmics_diffNetworks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a table of all significant interactions across categories — get_multiOmics_diffNetworks","text":"","code":"get_multiOmics_diffNetworks(deggs_object, sig_threshold = 0.05)"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/get_multiOmics_diffNetworks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a table of all significant interactions across categories — get_multiOmics_diffNetworks","text":"deggs_object object class deggs generated get_diffNetworks sig_threshold threshold significance. Default 0.05.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/get_multiOmics_diffNetworks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a table of all significant interactions across categories — get_multiOmics_diffNetworks","text":"list multilayer networks (edge tables), one per category.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/get_multiOmics_diffNetworks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a table of all significant interactions across categories — get_multiOmics_diffNetworks","text":"","code":"data(\"synthetic_metadata\") data(\"synthetic_rnaseqData\") data(\"synthetic_proteomicData\") data(\"synthetic_OlinkData\") assayData_list <- list(\"RNAseq\" = synthetic_rnaseqData,                        \"Proteomics\" = synthetic_proteomicData,                        \"Olink\" = synthetic_OlinkData) deggs_object <- get_diffNetworks(assayData = assayData_list,                                  metadata = synthetic_metadata,                                  category_variable = \"response\",                                  verbose = FALSE,                                  show_progressBar = FALSE,                                  cores = 2) get_multiOmics_diffNetworks(deggs_object, sig_threshold = 0.05) #> $Non_responder #>                  from       to      p.value        p.adj      layer #> TNF-TNFRSF1A      TNF TNFRSF1A 3.325023e-04 1.330009e-03     RNAseq #> IL1B-IL1R2       IL1B    IL1R2 5.389195e-04 2.155678e-03     RNAseq #> TGFB3-TGFBR1    TGFB3   TGFBR1 5.329071e-15 2.131628e-14     RNAseq #> AKT2-MTOR        AKT2     MTOR 4.347083e-04 1.738833e-03     RNAseq #> FANCD2-FAN1    FANCD2     FAN1 4.440892e-16 3.552714e-15 Proteomics #> GNG12-RASA2     GNG12    RASA2 0.000000e+00 0.000000e+00 Proteomics #> RASGRP3-RRAS  RASGRP3     RRAS 2.202344e-04 1.761875e-03 Proteomics #> TNF-TNFRSF1A1     TNF TNFRSF1A 0.000000e+00 0.000000e+00 Proteomics #> RASGRP1-RAP1A RASGRP1    RAP1A 2.840564e-03 2.272452e-02 Proteomics #>  #> $Responder #>                from    to      p.value        p.adj  layer #> FANCD2-FAN1  FANCD2  FAN1 0.000000e+00 0.000000e+00 RNAseq #> FASLG-FAS     FASLG   FAS 6.947839e-07 2.084352e-06 RNAseq #> MAP2K2-MAPK3 MAP2K2 MAPK3 1.153300e-12 3.459899e-12 RNAseq #>"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/get_sig_deggs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a table of all the significant interactions across categories — get_sig_deggs","title":"Get a table of all the significant interactions across categories — get_sig_deggs","text":"Get table significant interactions across categories","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/get_sig_deggs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a table of all the significant interactions across categories — get_sig_deggs","text":"","code":"get_sig_deggs(deggs_object, assayDataName = 1, sig_threshold = 0.05)"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/get_sig_deggs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a table of all the significant interactions across categories — get_sig_deggs","text":"deggs_object object class deggs generated get_diffNetworks assayDataName name assayData interest. unnamed list data given get_diffNetworks, assayDataName number corresponding position data assayDataList provided (.e. transcriptomic data second list, list differential interactions can obtained assayDataName = 2, one data table provided assayDataName must 1). Default 1. sig_threshold threshold significance. Default 0.05.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/get_sig_deggs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a table of all the significant interactions across categories — get_sig_deggs","text":"data.frame listing significant differential interactions found across categories particular omic data. list can also used substitute integrate feature selection machine learning models prediction categories (see vignette).","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/get_sig_deggs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a table of all the significant interactions across categories — get_sig_deggs","text":"","code":"data(\"synthetic_metadata\") data(\"synthetic_rnaseqData\") deggs_object <- get_diffNetworks(assayData = synthetic_rnaseqData,                                  metadata = synthetic_metadata,                                  category_variable = \"response\",                                  verbose = FALSE,                                  show_progressBar = FALSE,                                  cores = 2) get_sig_deggs(deggs_object, sig_threshold = 0.05)  #>                              from       to      p.value        p.adj #> Non_responder.TNF-TNFRSF1A    TNF TNFRSF1A 3.325023e-04 1.330009e-03 #> Non_responder.IL1B-IL1R2     IL1B    IL1R2 5.389195e-04 2.155678e-03 #> Non_responder.TGFB3-TGFBR1  TGFB3   TGFBR1 5.329071e-15 2.131628e-14 #> Non_responder.AKT2-MTOR      AKT2     MTOR 4.347083e-04 1.738833e-03 #> Responder.FANCD2-FAN1      FANCD2     FAN1 0.000000e+00 0.000000e+00 #> Responder.FASLG-FAS         FASLG      FAS 6.947839e-07 2.084352e-06 #> Responder.MAP2K2-MAPK3     MAP2K2    MAPK3 1.153300e-12 3.459899e-12"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/multiDEGGs_combined_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Combined multiDEGGs filter — multiDEGGs_combined_filter","title":"Combined multiDEGGs filter — multiDEGGs_combined_filter","text":"function can passed modifyX parameter nestcv.train nestcv.glmnet use one available statistical filters (t-test, wilcoxon, etc.) combination multiDEGGs. Single predictors selected selected statistical filter paired predictors added multiDEGGs.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/multiDEGGs_combined_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combined multiDEGGs filter — multiDEGGs_combined_filter","text":"","code":"multiDEGGs_combined_filter(   y,   x,   filter_method = \"ttest\",   nfilter,   dynamic_nfilter = TRUE,   keep_single_genes = FALSE,   ... )"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/multiDEGGs_combined_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combined multiDEGGs filter — multiDEGGs_combined_filter","text":"y Numeric vector factor. Response variable (outcome), .e. 'metadata' named vector, passed nestcv.train nestcv.glmnet. x Predictor variables, .e. assayData matrix genes columns IDs rows, passed nestcv.train nestcv.glmnet. filter_method Character string. Statistical filtering method used combination multiDEGGs sigle feature selection. Options : \"ttest\", \"wilcoxon\", \"ranger\", \"glmnet\", \"pls\". nfilter Integer. Maximum number features select. dynamic_nfilter Logical. TRUE nfilter limit number features selected statistical filter feature space augmented adding paired predictors found multiDEGGs. FALSE nfilter limit total number predictors, approximately half allocated pairs half single genes. keep_single_genes Logical. dynamic_nfilter = TRUE, determines whether include single genes selected multiDEGGs (.e. single variables included differential pairs) addition statistical filter. Default FALSE. ... Additional arguments passed filtering functions.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/multiDEGGs_combined_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combined multiDEGGs filter — multiDEGGs_combined_filter","text":"object class \"multiDEGGs_filter\" containing: keep Character vector selected single gene names pairs Data frame selected gene pairs interaction information","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/multiDEGGs_combined_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combined multiDEGGs filter — multiDEGGs_combined_filter","text":"function operates two modes: Dynamic Filtering (dynamic_nfilter = TRUE): Selects nfilter single genes using specified statistical method Finds significant gene pairs using multiDEGGs Total predictors = nfilter single genes + number significant pairs keep_single_genes = TRUE, also includes single genes obtained pairs found multiDEGGs Balanced Selection (dynamic_nfilter = FALSE): Allocates approximately half nfilter gene pairs Remaining slots filled single genes statistical filter fewer pairs found allocated, compensates selecting single genes Ensures consistent total number predictors across outer folds statistical filtering methods include: \"ttest\": Two-sample t-test differential expression \"wilcoxon\": Wilcoxon rank-sum test \"ranger\": Random Forest variable importance \"glmnet\": Elastic net regularization \"pls\": Partial Least Squares variable importance","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/multiDEGGs_combined_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combined multiDEGGs filter — multiDEGGs_combined_filter","text":"","code":"library(nestedcv) data(\"synthetic_metadata\") data(\"synthetic_rnaseqData\")  # fit a regularized linear model: fit.glmnet <- nestedcv::nestcv.glmnet( y = as.numeric(synthetic_metadata$response), x =  t(synthetic_rnaseqData), modifyX = \"multiDEGGs_combined_filter\", modifyX_options = list(filter_method = \"ttest\",                         nfilter = 20,                        dynamic_nfilter = TRUE,                         keep_single_genes = FALSE), modifyX_useY = TRUE, n_outer_folds = 5, n_inner_folds = 6)  summary(fit.glmnet) #> Nested cross-validation with glmnet #> No filter #> Modifier:  multiDEGGs_combined_filter  #> Outer loop:  5-fold CV #> Inner loop:  6-fold CV #> 100 observations, 14 predictors #>  #>        alpha  lambda n.filter #> Fold 1   0.1 0.09030       21 #> Fold 2   0.2 0.06096       21 #> Fold 3   0.1 0.06088       21 #> Fold 4   0.1 0.10813       21 #> Fold 5   0.1 0.10837       21 #>  #> Final parameters: #>  lambda    alpha   #> 0.07416  0.10000   #>  #> Final coefficients: #> (Intercept)      TGFBR1       TGFB3       MAPK3        FAN1      MAP2K2  #>    1.600221   -0.030282   -0.021849    0.018565    0.018547    0.017882  #>      FANCD2        AKT2        MTOR       IL1R2    TNFRSF1A       FASLG  #>    0.017037   -0.016352   -0.013397   -0.012949   -0.010538    0.008308  #>         FAS         TNF        IL1B  #>    0.007477   -0.005731   -0.003087  #>  #> Result: #>        RMSE     R.squared   Pearson.r^2           MAE    #>      0.1334        0.9270        0.9282        0.1018     # fit a random forest model: fit.rf <- nestedcv::nestcv.train(   y = synthetic_metadata$response,   x = t(synthetic_rnaseqData),   method = \"rf\",   modifyX = \"multiDEGGs_combined_filter\",   modifyX_options = list(filter_method = \"ttest\",                           nfilter = 20,                          dynamic_nfilter = TRUE,                           keep_single_genes = FALSE),   modifyX_useY = TRUE,   n_outer_folds = 5,   n_inner_folds = 6 ) #> Fitting final model using CV on whole data #> Loading required package: ggplot2 #> Loading required package: lattice #> Duration: 3.374633 secs  fit.rf$summary #>                Reference #> Predicted       Non_responder Responder #>   Non_responder            57         1 #>   Responder                 1        41 #>  #>               AUC            Accuracy   Balanced accuracy    #>            0.9996              0.9800              0.9795"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/multiDEGGs_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"multiDEGGs_filter — multiDEGGs_filter","title":"multiDEGGs_filter — multiDEGGs_filter","text":"Function passed modifyX parameter nestcv.train nestcv.glmnet allow nested feature selection augmentation via differential network analysis multiDEGGs.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/multiDEGGs_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"multiDEGGs_filter — multiDEGGs_filter","text":"","code":"multiDEGGs_filter(y, x, keep_single_genes = FALSE, nfilter = NULL)"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/multiDEGGs_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"multiDEGGs_filter — multiDEGGs_filter","text":"y Numeric vector factor. Response variable (outcome), .e. 'metadata' named vector, passed nestcv.train nestcv.glmnet. x Predictor variables, .e. assayData matrix genes columns IDs rows, passed nestcv.train nestcv.glmnet. keep_single_genes Logical, default FALSE. TRUE, function return unique individual genes along significant pairs. nfilter Integer. Maximum total number predictors return. keep_single_genes = TRUE, parameter limits combined count unique paired predictors (.e., length(keep_DEGGs) + nrow(pairs) <= nfilter). Predictors included least significant: pair, pair new unique variables included nfilter threshold reached. keep_single_genes = FALSE, nfilter limits number pairs returned. NULL, filtering applied total number predictors depend many significantly different interactions detected multiDEGGs fold.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/multiDEGGs_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"multiDEGGs_filter — multiDEGGs_filter","text":"list containing two types predictors: single predictors (stored 'keep_DEGGs' vector) paired predictors (stored 'pairs' dataframe) Note nfilter limits maximum number engineered features returned, however number might lower depend many significantly different interactions found fold multiDEGGs. significantly different interactions found function print '0' switch t-test fold.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/multiDEGGs_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"multiDEGGs_filter — multiDEGGs_filter","text":"","code":"library(nestedcv) data(\"synthetic_metadata\") data(\"synthetic_rnaseqData\")  # fit a regularized linear model: fit.glmnet <- nestcv.glmnet(   y = as.numeric(synthetic_metadata$response),   x =  t(synthetic_rnaseqData),   modifyX = \"multiDEGGs_filter\",   modifyX_options = list(keep_single_genes = FALSE,                          nfilter = 20),   modifyX_useY = TRUE,   n_outer_folds = 5,   n_inner_folds = 6)  summary(fit.glmnet) #> Nested cross-validation with glmnet #> No filter #> Modifier:  multiDEGGs_filter  #> Outer loop:  5-fold CV #> Inner loop:  6-fold CV #> 100 observations, 14 predictors #>  #>        alpha lambda n.filter #> Fold 1   0.1 0.1487        7 #> Fold 2   0.1 0.1416        7 #> Fold 3   0.1 0.2031        7 #> Fold 4   0.1 0.1387        7 #> Fold 5   0.1 0.1609        7 #>  #> Final parameters: #>  lambda    alpha   #> 0.06468  0.10000   #>  #> Final coefficients: #>  (Intercept) TNF:TNFRSF1A    AKT2:MTOR   IL1B:IL1R2    FASLG:FAS TGFB3:TGFBR1  #>      1.81668     -0.19091     -0.11686      0.05109     -0.03538     -0.03220  #> MAP2K2:MAPK3  FANCD2:FAN1  #>     -0.02099     -0.00872  #>  #> Result: #>        RMSE     R.squared   Pearson.r^2           MAE    #>      0.4679        0.1013        0.1023        0.4393     # fit a random forest model: fit.rf <- nestcv.train(   y = synthetic_metadata$response,   x = t(synthetic_rnaseqData),   method = \"rf\",   modifyX = \"multiDEGGs_filter\",   modifyX_options = list(keep_single_genes = FALSE,                          nfilter = 20),   modifyX_useY = TRUE,   n_outer_folds = 5,   n_inner_folds = 6 ) #> Fitting final model using CV on whole data #> Duration: 3.100777 secs  fit.rf$summary #>                Reference #> Predicted       Non_responder Responder #>   Non_responder            57         1 #>   Responder                 1        41 #>  #>               AUC            Accuracy   Balanced accuracy    #>            0.9938              0.9800              0.9795"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/my_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function for colors — my_palette","title":"Internal function for colors — my_palette","text":"function return color palette number colors specified n","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/my_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function for colors — my_palette","text":"","code":"my_palette(n)"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/my_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function for colors — my_palette","text":"n number colors needed","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/my_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function for colors — my_palette","text":"vector colors","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/node_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Boxplots of single nodes (genes,proteins, etc.) — node_boxplot","title":"Boxplots of single nodes (genes,proteins, etc.) — node_boxplot","text":"function internal use View_diffnetworks","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/node_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boxplots of single nodes (genes,proteins, etc.) — node_boxplot","text":"","code":"node_boxplot(gene, assayDataName = 1, deggs_object)"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/node_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boxplots of single nodes (genes,proteins, etc.) — node_boxplot","text":"gene gene name  (must rownames(assayData)) assayDataName name assayData interest. unnamed list data given get_diffNetworks, assayDataName number indicating position data assayDataList provided (.e. user wants plot differential interaction observed transcriptomic data, second list, assayDataName must 2, one data table provided assayDataName must 1). Default 1. deggs_object object class deggs generated get_diffNetworks","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/node_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boxplots of single nodes (genes,proteins, etc.) — node_boxplot","text":"boxplot","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/plot_regressions.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot differential regressions for a link — plot_regressions","title":"Plot differential regressions for a link — plot_regressions","text":"Plot differential regressions target-target pair omic dataset","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/plot_regressions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot differential regressions for a link — plot_regressions","text":"","code":"plot_regressions(   deggs_object,   assayDataName = 1,   gene_A,   gene_B,   title = NULL,   legend_position = \"topright\" )"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/plot_regressions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot differential regressions for a link — plot_regressions","text":"deggs_object object class deggs generated get_diffNetworks assayDataName name assayData interest. unnamed list data given get_diffNetworks, assayDataName number indicating position data assayDataList provided (.e. user wants plot differential interaction observed transcriptomic data, second list, assayDataName must 2, one data table provided assayDataName must 1). Default 1. gene_A character. Name first target (gene, protein, metabolite, etc.) gene_B character. Name second target (gene, protein, metabolite, etc.) title plot title. NULL (default), name assayData used. Use empty character \"\" title. legend_position position legend plot. can specified keyword parameter accepted xy.coords (defalut \"topright\")","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/plot_regressions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot differential regressions for a link — plot_regressions","text":"base graphics plot showing differential regressions across categories. p value interaction term gene ~ gene B \\* category reported top.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/plot_regressions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot differential regressions for a link — plot_regressions","text":"","code":"data(\"synthetic_metadata\") data(\"synthetic_rnaseqData\") data(\"synthetic_proteomicData\") data(\"synthetic_OlinkData\") assayData_list <- list(\"RNAseq\" = synthetic_rnaseqData,                        \"Proteomics\" = synthetic_proteomicData,                        \"Olink\" = synthetic_OlinkData) deggs_object <- get_diffNetworks(assayData = assayData_list,                                  metadata = synthetic_metadata,                                  category_variable = \"response\",                                  regression_method = \"lm\",                                  padj_method = \"bonferroni\",                                  verbose = FALSE,                                  show_progressBar = FALSE,                                  cores = 1) plot_regressions(deggs_object,                  assayDataName = \"RNAseq\",                  gene_A = \"MTOR\",                   gene_B = \"AKT2\",                  legend_position = \"bottomright\")"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/predict.multiDEGGs_combined_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict method for multiDEGGs_filter objects — predict.multiDEGGs_combined_filter","title":"Predict method for multiDEGGs_filter objects — predict.multiDEGGs_combined_filter","text":"function generates predictions creating dataset single combined predictors based filtering results multiDEGGs_filter model.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/predict.multiDEGGs_combined_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict method for multiDEGGs_filter objects — predict.multiDEGGs_combined_filter","text":"","code":"# S3 method for class 'multiDEGGs_combined_filter' predict(filter_res, newdata, interaction.type = \"ratio\", sep = \":\")"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/predict.multiDEGGs_combined_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict method for multiDEGGs_filter objects — predict.multiDEGGs_combined_filter","text":"filter_res model object class multiDEGGs_filter containing filtering results : keep Character vector variable names keep single predictors pairs Data frame matrix two columns specifying pairs variables combine newdata data frame containing new data prediction. Must contain variables specified filter_res$keep filter_res$pairs. interaction.type Character string specifying combine paired predictors. Options : \"ratio\" Combine paired predictors dividing first variable second (/b) Combine paired predictors multiplying variables (*b) Default \"ratio\". sep Character string used separator creating column names combined predictors. Default \":\".","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/predict.multiDEGGs_combined_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict method for multiDEGGs_filter objects — predict.multiDEGGs_combined_filter","text":"data frame containing: Single predictors (specified filter_res$keep) Combined predictors based variable pairs interaction type","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/predict.multiDEGGs_combined_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict method for multiDEGGs_filter objects — predict.multiDEGGs_combined_filter","text":"function processes filtering results two steps: Selects single predictors newdata based variables listed filter_res$keep Adds combined predictors paired variables filter_res$pairs","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/predict.multiDEGGs_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict method for multiDEGGs_filter objects — predict.multiDEGGs_filter","title":"Predict method for multiDEGGs_filter objects — predict.multiDEGGs_filter","text":"function generates predictions creating dataset single combined predictors based filtering results multiDEGGs_filter model.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/predict.multiDEGGs_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict method for multiDEGGs_filter objects — predict.multiDEGGs_filter","text":"","code":"# S3 method for class 'multiDEGGs_filter' predict(filter_res, newdata, interaction.type = \"ratio\", sep = \":\")"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/predict.multiDEGGs_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict method for multiDEGGs_filter objects — predict.multiDEGGs_filter","text":"filter_res model object class multiDEGGs_filter containing filtering results : keep Character vector variable names keep single predictors pairs Data frame matrix two columns specifying pairs variables combine newdata data frame containing new data prediction. Must contain variables specified filter_res$keep filter_res$pairs. interaction.type Character string specifying combine paired predictors. Options : \"ratio\" Combine paired predictors dividing first variable second (/b) Combine paired predictors multiplying variables (*b) Default \"ratio\". sep Character string used separator creating column names combined predictors. Default \":\".","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/predict.multiDEGGs_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict method for multiDEGGs_filter objects — predict.multiDEGGs_filter","text":"data frame containing: Single predictors (specified filter_res$keep) Combined predictors based variable pairs interaction type","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/predict.multiDEGGs_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict method for multiDEGGs_filter objects — predict.multiDEGGs_filter","text":"function processes filtering results two steps: Selects single predictors newdata based variables listed filter_res$keep Adds combined predictors paired variables filter_res$pairs","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/synthetic_OlinkData.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic RNA-seq count data — synthetic_OlinkData","title":"Synthetic RNA-seq count data — synthetic_OlinkData","text":"Synthetic RNA-seq data log2 normalisation","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/synthetic_OlinkData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic RNA-seq count data — synthetic_OlinkData","text":"data frame xx rows (proteins) xx columns (patients IDs).","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/synthetic_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic clinical data — synthetic_metadata","title":"Synthetic clinical data — synthetic_metadata","text":"dataset containing sample clinical data 100 patients 40% response rate","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/synthetic_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic clinical data — synthetic_metadata","text":"data frame 100 rows 4 columns (IDs rownames): patient_id IDs matching IDs used colnames assay data matrix/matrices. age column simulate age patients. used. gender column simulate gender patients. used. response response outcome, used differential analysis","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/synthetic_proteomicData.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic RNA-seq count data — synthetic_proteomicData","title":"Synthetic RNA-seq count data — synthetic_proteomicData","text":"Synthetic RNA-seq data log2 normalisation","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/synthetic_proteomicData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic RNA-seq count data — synthetic_proteomicData","text":"data frame xx rows (proteins) xx columns (patients IDs).","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/synthetic_rnaseqData.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic RNA-seq count data — synthetic_rnaseqData","title":"Synthetic RNA-seq count data — synthetic_rnaseqData","text":"Synthetic RNA-seq data log2 normalisation","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/synthetic_rnaseqData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Synthetic RNA-seq count data — synthetic_rnaseqData","text":"data frame xx rows (genes) xx columns (patients IDs, matching metadata rownames).","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/tidy_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidying up of metadata. Samples belonging to undesidered categories (if specified) will be removed as well as categories with less than five samples, and NAs. — tidy_metadata","title":"Tidying up of metadata. Samples belonging to undesidered categories (if specified) will be removed as well as categories with less than five samples, and NAs. — tidy_metadata","text":"Tidying metadata. Samples belonging undesidered categories (specified) removed well categories less five samples, NAs.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/tidy_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidying up of metadata. Samples belonging to undesidered categories (if specified) will be removed as well as categories with less than five samples, and NAs. — tidy_metadata","text":"","code":"tidy_metadata(   category_subset = NULL,   metadata,   category_variable = NULL,   verbose = FALSE )"},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/tidy_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidying up of metadata. Samples belonging to undesidered categories (if specified) will be removed as well as categories with less than five samples, and NAs. — tidy_metadata","text":"category_subset optional character vector indicating categories used comparison. specified, categories category_variable used. metadata named vector, matrix, data.frame containing sample annotations categories. matrix data.frame, row correspond sample, columns representing different sample characteristics (e.g., treatment group, condition, time point). colname sample characteristic used differential analysis must specified category_variable. Rownames must match sample IDs used assayData. named vector, element must correspond sample characteristic used differential analysis, names must match sample IDs used colnames assayData. Continuous variables allowed. category_variable column name metadata (data.frame matrix) NULL metadata already named vector containing category information. verbose Logical. Whether print detailed output messages processing. Default FALSE.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/reference/tidy_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidying up of metadata. Samples belonging to undesidered categories (if specified) will be removed as well as categories with less than five samples, and NAs. — tidy_metadata","text":"tidy named factor vector sample annotations.","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/news/index.html","id":"multideggs-100","dir":"Changelog","previous_headings":"","what":"multiDEGGs 1.0.0","title":"multiDEGGs 1.0.0","text":"CRAN release: 2025-06-05","code":""},{"path":"https://elisabettasciacca.github.io/multiDEGGs/news/index.html","id":"initial-release-1-0-0","dir":"Changelog","previous_headings":"","what":"Initial Release","title":"multiDEGGs 1.0.0","text":"First public version multiDEGGs Provides tools differential network analysis. Can easily integrated machine learning pipelines feature selection method. Supports single multi omic analyses. Compatible R >= 4.4.","code":""}]
